<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// MAKE SURE ONLY 1 INSTANCE OF LIGHTSYSTEM EXISTS TO AVOID DOUBLE INITIATION //
if(instance_number(object_index) &gt; 1) {
    instance_destroy();
} else {
    lfx_init();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// DRAW THE LIGHT PASS //
lfx_shader_reset();
shader_set(sha_light);
texture_set_stage(shader_get_sampler_index(sha_light, "u_normal"), surface_get_texture(LFX_normal));
texture_set_stage(shader_get_sampler_index(sha_light, "u_emissive"), surface_get_texture(LFX_emissive));
var difftex = surface_get_texture(LFX_diffuse);
shader_set_uniform_f(shader_get_uniform(sha_light, "u_texel"), texture_get_texel_width(difftex), texture_get_texel_height(difftex));
shader_set_uniform_f(shader_get_uniform(sha_light, "u_radius"), surface_get_width(LFX_diffuse) / 50);
shader_set_uniform_f(shader_get_uniform(sha_light, "u_sun_direction"), mouse_x - room_width * 0.5, mouse_y - room_height * 0.5, 100);
shader_set_uniform_f(shader_get_uniform(sha_light, "u_sun_colour"), 1, 0.9, 0.8);
shader_set_uniform_f(shader_get_uniform(sha_light, "u_ambiant_light"), 0, 0, 0);
draw_surface(LFX_diffuse, -2, -2);
shader_reset();
var sw = surface_get_width(LFX_diffuse);
draw_surface_ext(LFX_diffuse, 0, 0, 0.2, 0.2, 0, c_white, 1);
draw_surface_ext(LFX_normal, sw * 0.2, 0, 0.2, 0.2, 0, c_white, 1);
draw_surface_ext(LFX_emissive, sw * 0.4, 0, 0.2, 0.2, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// MAKE SURE THE BUFFERS FIT THE VIEW //
lfx_surface_prepare();
// SET THE SHADER //
lfx_shader_set();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
